{"mappings":"+CAGMA,EACJC,MACAC,2BAEEC,KAAKF,MAAQG,EAAU,iBACvBD,KAAKD,aAAe,IAAIG,EAE1BC,OAAOC,GAEL,OAAOA,EAAIC,eAAe,UAAyB,SAAbD,EAAIE,MAAgC,eAAbF,EAAIE,MAEnEC,UAAUC,GAER,OADAR,KAAKF,MAAM,qBAAsBE,OACzBA,KAAKG,OAAOK,GAEtBC,QAAQC,GAEN,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIG,MAAM,sEAGlB,MAAMC,EAAOJ,EAAIK,OAAOf,KAAKG,QAAQa,KAAIC,GAChCA,EAAIC,KAAO,KACjBC,KAAK,MAER,OADAnB,KAAKF,MAAM,QAASgB,GACbJ,EAAIK,QAAOE,IAAQjB,KAAKG,OAAOiB,KAAKpB,KAAMiB,KAAMD,KAAIC,IAEzD,GADAjB,KAAKF,MAAM,aAAcuB,EAAKC,QAAQL,GAAK,EAAO,KAC9CA,EAAIZ,eAAe,SAAU,CAE/B,GADAL,KAAKF,MAAM,kBACPa,MAAMC,QAAQK,EAAIM,OAQpB,MAAM,IAAIV,MAAM,iCAPhBb,KAAKF,MAAM,sBACXmB,EAAIM,MAAQN,EAAIM,MAAMP,KAAIQ,GACjBxB,KAAKD,aAAaU,QAAQe,EAAMV,KAS7C,OADAd,KAAKF,MAAM,WAAYuB,EAAKC,QAAQL,GAAK,EAAO,KACzCA,YAKPf,EACJY,KACAhB,MAAQG,EAAU,4BACNa,GACVd,KAAKc,KAAOA,EAEdL,QAAQQ,EAAKQ,GAIX,GAHAzB,KAAKF,MAAM,kBAAmBuB,EAAKC,QAAQL,GAAK,EAAM,IACtDjB,KAAKF,MAAM,gCAAkCmB,GAEzCN,MAAMC,QAAQK,GAChB,MAAM,IAAIJ,MAAM,uEAObI,EAAIZ,eAAe,SACtBY,EAAIC,KAAM,GAKV,IACE,MAAMJ,GAAQG,EAAIH,MAAQ,IAAM,MAAQd,KAAKc,MAAQ,IAAM,MAAQW,GAAa,IAE1EC,EAAOC,SAASb,EAAO,YAAcG,EAAIC,KAE/ClB,KAAKF,MAAM,QAAS4B,EAAKE,YAEzB,MAAMC,EAAaH,IACnB1B,KAAKF,MAAM,cAAe+B,GAC1B7B,KAAKF,MAAM,4BAA6B+B,GAEpCR,EAAKS,MAAMC,OAAOF,IACpB7B,KAAKF,MAAM,wBACXmB,EAAIC,IAAMW,EAAWG,eAEdH,EAAWxB,eAAe,aACjCL,KAAKF,MAAM,+BACXmB,EAAIC,IAAMW,EAAWD,YAGrBX,EAAIC,IADyB,iBAAfW,EACJI,KAAKC,UAAUL,GAGfA,SAGLZ,EAAIH,KAqCb,MAAOqB,GACLC,QAAQC,MAAMF,GAGlB,OAAOlB","sources":["workspaces/foo-dog-attrs/src/index.js"],"sourcesContent":["import debugFunc from 'debug'\nimport util from 'util'\n\nclass AttrsResolver {\n  debug\n  attrResolver\n  constructor() {\n    this.debug = debugFunc('AttrsResolver')\n    this.attrResolver = new AttrResolver()\n  }\n  isCode(obj) {\n    // debug('isCode(): obj=', obj)\n    return obj.hasOwnProperty('type') && (obj.type === 'code' || obj.type === 'unbuf_code')\n  }\n  isNotCode(obj) {\n    this.debug('isNotCode(): this=', this)\n    return !this.isCode(obj)\n  }\n  resolve(arr) {\n\n    if (!Array.isArray(arr)) {\n      throw new Error('AttrsResolver expects an array. Did you mean to call AttrResolver?')\n    }\n\n    const code = arr.filter(this.isCode).map(obj => {\n      return obj.val ?? ''\n    }).join('\\n')\n    this.debug('code=', code)\n    return arr.filter(obj => !this.isCode.call(this, obj)).map(obj => {\n      this.debug('start obj=', util.inspect(obj, false, 10))\n      if (obj.hasOwnProperty('attrs')) {\n        this.debug('obj has attrs')\n        if (Array.isArray(obj.attrs)) {\n          this.debug('obj.attrs is array')\n          obj.attrs = obj.attrs.map(attr => {\n            return this.attrResolver.resolve(attr, code)\n            // return this.attrResolver.resolve.call(this.attrResolver, attr)\n          })\n        } \n        else {\n          throw new Error('attributes should be an array')\n        }\n      }\n      this.debug('end obj=', util.inspect(obj, false, 10))\n      return obj\n    })\n  }\n}\n\nclass AttrResolver {\n  code\n  debug = debugFunc('AttrResolver')\n  constructor(code) {\n    this.code = code\n  }\n  resolve(obj, codeParam) {\n    this.debug('resolve(): obj=', util.inspect(obj, true, 5))\n    this.debug('resolve(): typeof obj=' + typeof obj)\n\n    if (Array.isArray(obj)) {\n      throw new Error('AttrResolver expects an object. Did you mean to call AttrsResolver?')\n    }\n\n    // if (!obj.hasOwnProperty('name')) {\n    //   throw new Error('AttrResolver expects an attribute object but this object doesn\\'t have a name field')\n    // }\n\n    if (!obj.hasOwnProperty('val')) {\n      obj.val = true\n      // throw new Error('AttrResolver expects an attribute object but this object doesn\\'t have a val field')\n    }\n    // let newAttrs = {}\n\n      try {\n        const code = (obj.code ?? '') + '\\n' + (this.code ?? '') + '\\n' + (codeParam ?? '')\n\n        const func = Function(code + '; return ' + obj.val);\n\n        this.debug('func=', func.toString())\n\n        const newAttrVal = func()\n        this.debug('newAttrVal=', newAttrVal)\n        this.debug('typeof newAttrVal=', typeof newAttrVal)\n\n        if (util.types.isDate(newAttrVal)) {\n          this.debug('newAttrVal is a date')\n          obj.val = newAttrVal.toISOString()\n        }\n        else if (newAttrVal.hasOwnProperty('toString')) {\n          this.debug('newAttrVal.hasOwnProperty()')\n          obj.val = newAttrVal.toString()\n        }\n        else if (typeof newAttrVal === 'object') {\n          obj.val = JSON.stringify(newAttrVal)\n        }\n        else {\n          obj.val = newAttrVal\n        }\n\n        delete obj.code\n\n      //   debug('callAttrs: attrs=', obj.attrs)\n    \n      //   var result, finalResult;\n      //   // HTML MODE\n      //   result = compileAttrs([{ name: 'unbuf_code', val: 'var needsResolved = \"candy\"', mustEscape: false }], {\n      //     terse:   true,\n      //     format:  'object',\n      //     runtime: function (name) { return 'pugRuntime.' + name; }\n      //   });\n\n      //   // result = compileAttrs(obj.attrs, {\n      //   //   terse:   true,\n      //   //   format:  'html',\n      //   //   runtime: function (name) { return 'pugRuntime.' + name; }\n      //   // });\n      //   //=> '\" foo=\\\\\"bar\\\\\"\" + pugRuntime.attr(\"baz\", getBaz(), true, true) + \" quux\"'\n      //   debug('result=', result)\n    \n      //   finalResult = Function('pugRuntime', 'user', 'id', 'bar', 'baz', 'object', 'answer', 'return (' + result + ');' );\n      //   debug('finalResult=', finalResult.toString())\n    \n      //   let attResult = finalResult(pugRuntime, obj).trim();\n      //   // => ' foo=\"bar\" baz=\"baz&lt;&gt;\" quux'\n      //   debug('attResult=', attResult)\n      //   return attResult\n\n        // const js = 'var needsResolved = \"candy\"'\n        // const attrs = [{name: 'class', val: 'needsResolved'}]\n        \n        // const func = Function('param1', obj. + '; return ' + attrs[0].val);\n        // console.log(func.toString())\n        // const newAttrVal = func()\n        // newAttrs[attrs.name] = newAttrVal\n\n      } \n      catch (e) {\n        console.error(e)\n      }\n\n    return obj\n  }\n}\n\nexport { \n  AttrResolver,\n  AttrsResolver\n}"],"names":["$41a168380a7a3713$export$1befe2afa07d3c49","debug","attrResolver","this","$9P1m3$debug","$41a168380a7a3713$export$dd7f89e61b3db75f","isCode","obj2","hasOwnProperty","type","isNotCode","obj1","resolve","arr","Array","isArray","Error","code","filter","map","obj","val","join","call","$9P1m3$util","inspect","attrs","attr","codeParam","func","Function","toString","newAttrVal","types","isDate","toISOString","JSON","stringify","e","console","error"],"version":3,"file":"module.js.map","sourceRoot":"../../../"}